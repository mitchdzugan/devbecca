{"version":3,"sources":["App.jsx","logo.svg","reportWebVitals.js","index.js"],"names":["SERVERID","ls","_basics","split","slice","join","socket","io","on","data","JSON","parse","id","serverData","window","stepping","globIn","App","React","useState","codeId","setCodeId","code","basics","basics2","_basics2","factorial","_factorial","change","_change","fib","_fib","fib_mem","_fib_mem","stopped","started","setStarted","fullStarted","setFullStarted","vars","setVars","stack","linenum","fname","_stack","setStack","_stdin","_setStdin","setStdin","s","map","el","length","PROC","stdin","done","useEffect","theRest","PROC2","className","style","display","flexDirection","flex","value","onChange","e","target","fetch","then","response","json","onClick","preventDefault","href","onValueChange","highlight","languages","ruby","line","i","padding","fontFamily","fontSize","visibility","margin","reverse","marginLeft","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.079c375e.chunk.js","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Inspector from 'react-inspector';\nimport Editor from \"react-simple-code-editor\";\nimport { highlight, languages } from \"prismjs/components/prism-core\";\nimport \"prismjs/components/prism-clike\";\nimport \"prismjs/components/prism-ruby\";\nimport \"prismjs/themes/prism.css\";\nimport _basics from \"../../basics.rb\";\nimport _basics2 from \"../../basics2.rb\";\nimport _factorial from \"../../factorial.rb\";\nimport _change from \"../../change.rb\";\nimport _fib from \"../../fib.rb\";\nimport _fib_mem from \"../../fib_mem.rb\";\nimport { io } from \"socket.io-client\";\nconst basics = _basics.split(\"\\n\").slice(4).join(\"\\n\");\nconst ls = basics.split(\"\\n\");\n\nlet SERVERID;\n\nconst socket = io();\nsocket.on('ID', data => { SERVERID = JSON.parse(data).id; });\nconst serverData = window.serverData;\nlet stepping = false;\nlet globIn = \"\";\nfunction App() {\n    const [codeId, setCodeId] = React.useState(serverData.codeId);\n    const code = {\n        basics: _basics,\n        basics2: _basics2,\n        factorial: _factorial,\n        change: _change,\n        fib: _fib,\n        fib_mem: _fib_mem,\n    }[codeId].split(\"\\n\").slice(4).join(\"\\n\");\n    const [started, setStarted] = React.useState(!serverData.stopped);\n    const [fullStarted, setFullStarted] = React.useState(started);\n    const [vars, setVars] = React.useState(serverData.vars || {});\n    const [_stack, setStack] = React.useState(serverData.stack || [{ linenum: 0, fname: \"\" }]);\n    const [_stdin, _setStdin] = React.useState(\"\");\n    const setStdin = (s) => {\n        globIn = s;\n        _setStdin(s);\n    };\n    const stack = _stack.map((el) => {\n        let linenum = el.linenum + 1;\n        while (linenum < 100 && (ls[linenum - 1] || \"\").length < 1) {\n            linenum++;\n        }\n        return { linenum, fname: el.fname };\n    });\n    const { linenum } = stack[0];\n    const reset = (e) => {\n        e.preventDefault();\n        if (!started) { return; }\n        fetch(`/reset?id=${SERVERID}`).then(() => {\n            setStarted(false);\n            setFullStarted(false);\n            setVars({});\n            setStack([{ linenum: 0, fname: \"\" }]);\n            setStdin(\"\");\n        });\n    };\n    const PROC = ({ stack, vars, stdin, done }) => {\n        setStdin((!started ? \"\" : _stdin) + (stdin || \"\"));\n        setFullStarted(true);\n        if (!done) {\n            setVars(vars);\n            setStack(stack);\n        }\n        if (done) {\n            setStack([{ linenum: 0, fname: \"\" }]);\n            setStarted(false);\n            setFullStarted(false);\n        }\n        stepping = false;\n    };\n    const PROC2 = ({ stack, vars, stdin, done, ...theRest }) => {\n        if (theRest.codeId !== codeId) {\n            setStdin(\"\");\n            setVars({});\n            setCodeId(theRest.codeId);\n        }\n        setStdin(globIn + (stdin || \"\"));\n        setFullStarted(true);\n        if (!done) {\n            setVars(vars);\n            setStack(stack);\n        }\n        if (done) {\n            setStack([{ linenum: 0, fname: \"\" }]);\n            setStarted(false);\n            setFullStarted(false);\n        }\n    };\n    const step = (e) => {\n        e.preventDefault();\n        if (stepping) { return; }\n        stepping = true;\n        if (!started) {\n            setStdin(\"\");\n            setVars({});\n            setStarted(true);\n        }\n        fetch(`/${started ? 'step' : 'start'}?id=${SERVERID}&code=${codeId}`)\n            .then(response => response.json())\n            .then(PROC);\n    };\n    React.useEffect(() => {\n        socket.on('DATA', data => {\n            PROC2(JSON.parse(data));\n        });\n    }, []);\n    const rewind = (e) => {\n        e.preventDefault();\n        if (!started) { return; }\n        if (stepping) { return; }\n        stepping = true;\n        setStarted(true);\n        fetch(`/rewind?id=${SERVERID}`)\n            .then(response => response.json())\n            .then(({ stack, vars, stdin, done }) => {\n                setStdin(stdin || \"\");\n                setFullStarted(true);\n                if (!done) {\n                    setVars(vars);\n                    setStack(stack);\n                }\n                if (done) {\n                    setStack([{ linenum: 0, fname: \"\" }]);\n                    setStarted(false);\n                    setFullStarted(false);\n                }\n                stepping = false;\n            });\n    };\n    const stdin = _stdin;\n    return (\n        <div className=\"page\" >\n          <div style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n          }}>\n            <div style ={{ flex: \"2\" }}>\n              <div className=\"editor\">\n                <div className=\"header\">\n                  <div>Editor</div>\n                  <div className=\"spacer\" />\n                  <div className=\"spacer\" />\n                  <div className=\"spacer\" />\n                  <select\n                    value={codeId}\n                    onChange={(e) => {\n                        setCodeId(e.target.value);\n                        setStdin(\"\");\n                        setVars({});\n                        fetch(`/start?id=${SERVERID}&code=${e.target.value}`)\n                            .then(response => response.json())\n                            .then(PROC);\n                    }}\n                  >\n                    <option value=\"basics\">basics</option>\n                    <option value=\"basics2\">basics2</option>\n                    <option value=\"factorial\">factorial</option>\n                    <option value=\"change\">change</option>\n                    <option value=\"fib\">fib</option>\n                    <option value=\"fib_mem\">fib_mem</option>\n                  </select>\n                  <div className=\"spacer\" />\n                  <div className=\"spacer\" />\n                  <div className=\"spacer\" />\n                  <a onClick={reset} href={started ? \"\" : null}>Reset</a>\n                  <div className=\"spacer\" />\n                  <a onClick={rewind} href={started ? \"\" : null}>Rewind</a>\n                  <div className=\"spacer\" />\n                  <a onClick={step} href={\"\"}>Step</a>\n                  <div className=\"spacer\" />\n                </div>\n                <div className=\"ta\">\n                  <div>\n                    <Editor\n                      onValueChange={(code) => {}}\n                      highlight={code =>\n                          highlight(code, languages.ruby)\n                              .split('\\n')\n                              .map((line, i) =>\n                                  `<span class=\"container_editor_line_number ${i + 1 === linenum ? \"hlight\" : \"\"}\">${line}</span>`\n                              ).join('\\n')\n                      }\n                      value={code}\n                      padding={10}\n                      style={{\n                          fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n                          fontSize: 12,\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div style ={{ flex: \"1\", display: \"flex\", flexDirection: \"column\" }}>\n              <div className=\"editor\">\n                <div className=\"header\">\n                  <div>Variables</div>\n                  <div className=\"spacer\" />\n                  <button style={{ visibility: \"hidden\" }} >i</button>\n                </div>\n                <div className=\"ta ta2\">\n                  <div>\n                    <Inspector data={vars} />\n                  </div>\n                </div>\n              </div>\n              <div className=\"editor\">\n                <div className=\"header\">\n                  <div>Stack</div>\n                  <div className=\"spacer\" />\n                  <button style={{ visibility: \"hidden\" }} >i</button>\n                </div>\n                <div className=\"ta ta2\">\n                  {!fullStarted ? <div/> : (\n                      <table style={{ margin: \"auto\" }} className=\"table\">\n                        <tr>\n                          <th>Function</th>\n                          <th>Line Number</th>\n                        </tr>\n                        {stack.reverse().map(({ fname, linenum }) => <tr><td>{fname === \"\" ? <italic>toplevel</italic> : fname}</td><td>{linenum}</td></tr>)}\n                      </table>\n                  )}\n                </div>\n              </div>\n              <div className=\"editor\">\n                <div className=\"header\">\n                  <div>Output</div>\n                <div className=\"spacer\" />\n                <button style={{ visibility: \"hidden\" }} >i</button>\n              </div>\n                <div className=\"ta ta2\">\n                  <pre style={{ marginLeft: \"1rem\" }} >\n                    {stdin}\n                  </pre>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n    );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}