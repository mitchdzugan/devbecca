{"version":3,"sources":["logo.svg","App.jsx","reportWebVitals.js","index.js"],"names":["basics","split","slice","join","ls","serverData","window","stepping","App","React","useState","stopped","started","setStarted","fullStarted","setFullStarted","vars","setVars","stack","linenum","fname","_stack","setStack","_stdin","setStdin","map","el","length","stdin","className","style","display","flexDirection","flex","onClick","e","preventDefault","fetch","then","href","response","json","done","onValueChange","code","highlight","languages","ruby","line","i","value","padding","fontFamily","fontSize","visibility","data","margin","reverse","marginLeft","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7106770f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Inspector from 'react-inspector';\nimport Editor from \"react-simple-code-editor\";\nimport { highlight, languages } from \"prismjs/components/prism-core\";\nimport \"prismjs/components/prism-clike\";\nimport \"prismjs/components/prism-ruby\";\nimport \"prismjs/themes/prism.css\";\nimport _basics from \"../../basics.rb\";\nconst basics = _basics.split(\"\\n\").slice(4).join(\"\\n\");\nconst ls = basics.split(\"\\n\");\n\nconst serverData = window.serverData;\nlet stepping = false;\nfunction App() {\n    const [started, setStarted] = React.useState(!serverData.stopped);\n    const [fullStarted, setFullStarted] = React.useState(started);\n    const [vars, setVars] = React.useState(serverData.vars || {});\n    const [_stack, setStack] = React.useState(serverData.stack || [{ linenum: 0, fname: \"\" }]);\n    const [_stdin, setStdin] = React.useState(\"\");\n    const stack = _stack.map((el) => {\n        let linenum = el.linenum + 1;\n        while (linenum < 100 && (ls[linenum - 1] || \"\").length < 1) {\n            linenum++;\n        }\n        return { linenum, fname: el.fname };\n    });\n    const { linenum } = stack[0];\n    const reset = (e) => {\n        e.preventDefault();\n        if (!started) { return; }\n        fetch('/reset').then(() => {\n            setStarted(false);\n            setFullStarted(false);\n            setVars({});\n            setStack([{ linenum: 0, fname: \"\" }]);\n            setStdin(\"\");\n        });\n    };\n    const step = (e) => {\n        e.preventDefault();\n        if (stepping) { return; }\n        stepping = true;\n        if (!started) {\n            setStdin(\"\");\n            setVars({});\n            setStarted(true);\n        }\n        fetch(started ? '/step' : '/start')\n            .then(response => response.json())\n            .then(({ stack, vars, stdin, done }) => {\n                setStdin((!started ? \"\" : _stdin) + (stdin || \"\"));\n                setFullStarted(true);\n                if (!done) {\n                    setVars(vars);\n                    setStack(stack);\n                }\n                if (done) {\n                    setStack([{ linenum: 0, fname: \"\" }]);\n                    setStarted(false);\n                    setFullStarted(false);\n                }\n                stepping = false;\n            });\n    };\n    const rewind = (e) => {\n        e.preventDefault();\n        if (!started) { return; }\n        if (stepping) { return; }\n        stepping = true;\n        setStarted(true);\n        fetch('/rewind')\n            .then(response => response.json())\n            .then(({ stack, vars, stdin, done }) => {\n                setStdin(stdin || \"\");\n                setFullStarted(true);\n                if (!done) {\n                    setVars(vars);\n                    setStack(stack);\n                }\n                if (done) {\n                    setStack([{ linenum: 0, fname: \"\" }]);\n                    setStarted(false);\n                    setFullStarted(false);\n                }\n                stepping = false;\n            });\n    };\n    const stdin = _stdin;\n    return (\n        <div className=\"page\" >\n          <div style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n          }}>\n            <div style ={{ flex: \"2\" }}>\n              <div className=\"editor\">\n                <div className=\"header\">\n                  <div>Editor</div>\n                  <div className=\"spacer\" />\n                  <div className=\"spacer\" />\n                  <div className=\"spacer\" />\n                  <div className=\"spacer\" />\n                  <div className=\"spacer\" />\n                  <div className=\"spacer\" />\n                  <a onClick={reset} href={started ? \"\" : null}>Reset</a>\n                  <div className=\"spacer\" />\n                  <a onClick={rewind} href={started ? \"\" : null}>Rewind</a>\n                  <div className=\"spacer\" />\n                  <a onClick={step} href={\"\"}>Step</a>\n                  <div className=\"spacer\" />\n                </div>\n                <div className=\"ta\">\n                  <div>\n                    <Editor\n                      onValueChange={(code) => {}}\n                      highlight={code =>\n                          highlight(code, languages.ruby)\n                              .split('\\n')\n                              .map((line, i) =>\n                                  `<span class=\"container_editor_line_number ${i + 1 === linenum ? \"hlight\" : \"\"}\">${line}</span>`\n                              ).join('\\n')\n                      }\n                      value={basics}\n                      padding={10}\n                      style={{\n                          fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n                          fontSize: 12,\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div style ={{ flex: \"1\", display: \"flex\", flexDirection: \"column\" }}>\n              <div className=\"editor\">\n                <div className=\"header\">\n                  <div>Variables</div>\n                  <div className=\"spacer\" />\n                  <button style={{ visibility: \"hidden\" }} >i</button>\n                </div>\n                <div className=\"ta ta2\">\n                  <div>\n                    <Inspector data={vars} />\n                  </div>\n                </div>\n              </div>\n              <div className=\"editor\">\n                <div className=\"header\">\n                  <div>Stack</div>\n                  <div className=\"spacer\" />\n                  <button style={{ visibility: \"hidden\" }} >i</button>\n                </div>\n                <div className=\"ta ta2\">\n                  {!fullStarted ? <div/> : (\n                      <table style={{ margin: \"auto\" }} className=\"table\">\n                        <tr>\n                          <th>Function</th>\n                          <th>Line Number</th>\n                        </tr>\n                        {stack.reverse().map(({ fname, linenum }) => <tr><td>{fname === \"\" ? <italic>toplevel</italic> : fname}</td><td>{linenum}</td></tr>)}\n                      </table>\n                  )}\n                </div>\n              </div>\n              <div className=\"editor\">\n                <div className=\"header\">\n                  <div>Output</div>\n                <div className=\"spacer\" />\n                <button style={{ visibility: \"hidden\" }} >i</button>\n              </div>\n                <div className=\"ta ta2\">\n                  <pre style={{ marginLeft: \"1rem\" }} >\n                    {stdin}\n                  </pre>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}