(this.webpackJsonpintro=this.webpackJsonpintro||[]).push([[0],{49:function(n,e,t){},50:function(n,e,t){},89:function(n,e,t){"use strict";t.r(e);var s,a=t(0),i=t.n(a),r=t(39),c=t.n(r),l=(t(49),t(44)),o=t(7),d=(t.p,t(50),t(40)),u=t(42),p=t.n(u),b=t(23),h=(t(55),t(56),t(57),t(43)),j=t(1),f='require "pry-byebug"\n\nbinding.pry\n\nputs("Hello World!")\nputs "Hello this way as well"\n\nx = 3\ny = 4\nz = 5\nanswer = x*y + z\nputs("The Answer is:")\nputs(answer)\n\ngreeting = "Hello, "\nperson1 = "Joe"\nperson2 = "Bob"\n\nfullMessage1 = greeting + person1\nputs(fullMessage1)\n\nfullMessage2 = greeting + person2\nputs(fullMessage2)\n\ndef sayHello(person)\n  intro = "Hello, "\n  fullMessage = intro + person\n  puts(fullMessage)\nend\n\nperson3 = "Alice"\nsayHello(person3)\nsayHello("Carol")\n\ndef introduce(greeter, greeted)\n  message = "Hello, " + greeted + ", I am " + greeter\n  if (greeter == greeted)\n    message = "Hello, " + greeted + ", we have the same name"\n  end\n  puts(message)\nend\n\nintroduce(person1, person3)\nintroduce(person2, "Bob")\n\ndef addExcitement(message, level)\n  if (level == 0)\n    message = message + "..."\n  end\n  i = 0\n  while (i < level)\n    message = message + "!"\n    i = i + 1\n  end\n  message\nend\n\nputs(addExcitement("I like turtles", 0))\nputs(addExcitement("I like turtles", 2))\nputs(addExcitement("I like turtles", 4))\n\ndef sayGoodbye(person)\n  intro = "Goodbye, "\n  goodbye = addExcitement(intro + person, 3)\n  postscript = " I hope to see you soon"\n  fullMessage = goodbye + postscript\n  puts(fullMessage)\nend\n\nsayGoodbye(person1)\nsayGoodbye(person2)\nsayGoodbye(person3)\n\n### data types\n\n# array\n\na1 = [1, 2, 3]\na2 = [4, 5, 6]\nv1 = a1.first\nv2 = a2[2]\na3 = a2.take(2).push(v1).push(v2)\nputs("Start array print:")\nputs(a3)\nputs("End array print")\n\n# hash\n\nh1 = {\n  "Chicago" => "Illinois",\n  "San Francisco" => "California",\n  "Seattle" => "Washington",\n}\nc1 = h1["Chicago"]\nhasCity1 = h1.include?("Seattle")\nhasCity2 = h1.include?("Los Angeles")\ncities = h1.keys\nh1.delete("San Francisco")\nputs(h1)\n',g='require "pry-byebug"\n\nbinding.pry\n\nputs("Hello World!")\nputs "WHAT"\n\nx = 3\ny = 4\nz = 5\nanswer = x*y + z\nputs("The Answer is:")\nputs(answer)\n\ngreeting = "Hello, "\nperson1 = "Joe"\nperson2 = "Bob"\n\nfullMessage1 = greeting + person1\nputs(fullMessage1)\n\nfullMessage2 = greeting + person2\nputs(fullMessage2)\n\ndef sayHello(person)\n  intro = "Hello, "\n  fullMessage = intro + person\n  puts(fullMessage)\nend\n\nperson3 = "Alice"\nsayHello(person3)\nsayHello("Carol")\n\ndef introduce(greeter, greeted)\n  message = "Hello, " + greeted + ", I am " + greeter\n  if (greeter == greeted)\n    message = "Hello, " + greeted + ", we have the same name"\n  end\n  puts(message)\nend\n\nintroduce(person1, person3)\nintroduce(person2, "Bob")\n\ndef addExcitement(message, level)\n  if (level == 0)\n    message = message + "..."\n  end\n  i = 0\n  while (i < level)\n    message = message + "!"\n    i = i + 1\n  end\n  message\nend\n\nputs(addExcitement("I like turtles", 0))\nputs(addExcitement("I like turtles", 2))\nputs(addExcitement("I like turtles", 4))\n\ndef sayGoodbye(person)\n  intro = "Goodbye, "\n  goodbye = addExcitement(intro + person, 3)\n  postscript = " I hope to see you soon"\n  fullMessage = goodbye + postscript\n  puts(fullMessage)\nend\n\nsayGoodbye(person1)\nsayGoodbye(person2)\nsayGoodbye(person3)\n\n### data types\n\n# array\n\na1 = [1, 2, 3]\na2 = [4, 5, 6]\nv1 = a1.first\nv2 = a2[2]\na3 = a2.take(2).push(v1).push(v2)\nputs("Start array print:")\nputs(a3)\nputs("End array print")\n\n# hash\n\nh1 = {\n  "Chicago" => "Illinois",\n  "San Francisco" => "California",\n  "Seattle" => "Washington",\n}\nc1 = h1["Chicago"]\nhasCity1 = h1.include?("Seattle")\nhasCity2 = h1.include?("Los Angeles")\ncities = h1.keys\nh1.delete("San Francisco")\nputs(h1)\n',m='require "pry-byebug"\n\nbinding.pry\n\ndef factorial(n)\n  if (n < 2)\n    return 1\n  end\n  puts("Fact of " + n.to_s)\n  factOneLess = factorial(n - 1)\n  n * factOneLess\nend\n\nputs("RAW")\nputs(4 * 3 * 2 * 1)\nputs("From Function")\nputs(factorial(4));\nputs("DONE")\n\n',v='require "pry-byebug"\n\nbinding.pry\n\ndef makeChange(n)\n  if (n === 0)\n    return {\n      "quarter" => 0,\n      "dime" => 0,\n      "nickel" => 0,\n      "penny" => 0,\n    }\n  end\n  if (n >= 25)\n    partial = makeChange(n - 25)\n    partial["quarter"] += 1\n    return partial\n  end\n  if (n >= 10)\n    partial = makeChange(n - 10)\n    partial["dime"] += 1\n    return partial\n  end\n  if (n >= 5)\n    partial = makeChange(n - 5)\n    partial["nickel"] += 1\n    return partial\n  end\n  partial = makeChange(n - 1)\n  partial["penny"] += 1\n  return partial\nend\n\nputs("Change Maker")\nputs(makeChange(7));\nputs(makeChange(86));\nputs("DONE")\n\n',y='require "pry-byebug"\n\nbinding.pry\n\ndef fib(n)\n  if (n < 2)\n    return 1\n  end\n  n1 = fib(n - 1)\n  n2 = fib(n - 2)\n  return n1 + n2\nend\n\nputs("RAW")\nputs(fib(4))\nputs(fib(7))\nputs("DONE")\n\n',x='require "pry-byebug"\n\nbinding.pry\n\n$MEM = {}\ndef fib(n)\n  if (n < 2)\n    return 1\n  end\n  if ($MEM[n])\n    return $MEM[n]\n  end\n  n1 = fib(n - 1)\n  n2 = fib(n - 2)\n  ans = n1 + n2\n  $MEM[n] = ans\n  return ans\nend\n\nputs("RAW")\nputs(fib(4))\nputs(fib(7))\nputs("DONE")\n\n',O=f.split("\n").slice(4).join("\n").split("\n"),N=Object(h.io)();N.on("ID",(function(n){s=JSON.parse(n).id}));var k=window.serverData,C=!1,M="";var E=function(){var n=i.a.useState(k.codeId),e=Object(o.a)(n,2),t=e[0],a=e[1],r={basics:f,basics2:g,factorial:m,change:v,fib:y,fib_mem:x}[t].split("\n").slice(4).join("\n"),c=i.a.useState(!k.stopped),u=Object(o.a)(c,2),h=u[0],E=u[1],S=i.a.useState(h),w=Object(o.a)(S,2),H=w[0],I=w[1],F=i.a.useState(k.vars||{}),D=Object(o.a)(F,2),A=D[0],G=D[1],q=i.a.useState(k.stack||[{linenum:0,fname:""}]),L=Object(o.a)(q,2),W=L[0],_=L[1],B=i.a.useState(""),J=Object(o.a)(B,2),T=J[0],z=J[1],R=function(n){M=n,z(n)},$=W.map((function(n){for(var e=n.linenum+1;e<100&&(O[e-1]||"").length<1;)e++;return{linenum:e,fname:n.fname}})),P=$[0].linenum,V=function(n){var e=n.stack,t=n.vars,s=n.stdin,a=n.done;R((h?T:"")+(s||"")),I(!0),a||(G(t),_(e)),a&&(_([{linenum:0,fname:""}]),E(!1),I(!1)),C=!1};i.a.useEffect((function(){N.on("DATA",(function(n){!function(n){var e=n.stack,s=n.vars,i=n.stdin,r=n.done,c=Object(l.a)(n,["stack","vars","stdin","done"]);c.codeId!==t&&(R(""),G({}),a(c.codeId)),R(M+(i||"")),I(!0),r||(G(s),_(e)),r&&(_([{linenum:0,fname:""}]),E(!1),I(!1))}(JSON.parse(n))}))}),[]);var K=T;return Object(j.jsx)("div",{className:"page",children:Object(j.jsxs)("div",{style:{display:"flex",flexDirection:"row"},children:[Object(j.jsx)("div",{style:{flex:"2"},children:Object(j.jsxs)("div",{className:"editor",children:[Object(j.jsxs)("div",{className:"header",children:[Object(j.jsx)("div",{children:"Editor"}),Object(j.jsx)("div",{className:"spacer"}),Object(j.jsx)("div",{className:"spacer"}),Object(j.jsx)("div",{className:"spacer"}),Object(j.jsxs)("select",{value:t,onChange:function(n){a(n.target.value),R(""),G({}),fetch("/start?id=".concat(s,"&code=").concat(n.target.value)).then((function(n){return n.json()})).then(V)},children:[Object(j.jsx)("option",{value:"basics",children:"basics"}),Object(j.jsx)("option",{value:"basics2",children:"basics2"}),Object(j.jsx)("option",{value:"factorial",children:"factorial"}),Object(j.jsx)("option",{value:"change",children:"change"}),Object(j.jsx)("option",{value:"fib",children:"fib"}),Object(j.jsx)("option",{value:"fib_mem",children:"fib_mem"})]}),Object(j.jsx)("div",{className:"spacer"}),Object(j.jsx)("div",{className:"spacer"}),Object(j.jsx)("div",{className:"spacer"}),Object(j.jsx)("a",{onClick:function(n){n.preventDefault(),h&&fetch("/reset?id=".concat(s)).then((function(){E(!1),I(!1),G({}),_([{linenum:0,fname:""}]),R("")}))},href:h?"":null,children:"Reset"}),Object(j.jsx)("div",{className:"spacer"}),Object(j.jsx)("a",{onClick:function(n){n.preventDefault(),h&&(C||(C=!0,E(!0),fetch("/rewind?id=".concat(s)).then((function(n){return n.json()})).then((function(n){var e=n.stack,t=n.vars,s=n.stdin,a=n.done;R(s||""),I(!0),a||(G(t),_(e)),a&&(_([{linenum:0,fname:""}]),E(!1),I(!1)),C=!1}))))},href:h?"":null,children:"Rewind"}),Object(j.jsx)("div",{className:"spacer"}),Object(j.jsx)("a",{onClick:function(n){n.preventDefault(),C||(C=!0,h||(R(""),G({}),E(!0)),fetch("/".concat(h?"step":"start","?id=").concat(s,"&code=").concat(t)).then((function(n){return n.json()})).then(V))},href:"",children:"Step"}),Object(j.jsx)("div",{className:"spacer"})]}),Object(j.jsx)("div",{className:"ta",children:Object(j.jsx)("div",{children:Object(j.jsx)(p.a,{onValueChange:function(n){},highlight:function(n){return Object(b.highlight)(n,b.languages.ruby).split("\n").map((function(n,e){return'<span class="container_editor_line_number '.concat(e+1===P?"hlight":"",'">').concat(n,"</span>")})).join("\n")},value:r,padding:10,style:{fontFamily:'"Fira code", "Fira Mono", monospace',fontSize:12}})})})]})}),Object(j.jsxs)("div",{style:{flex:"1",display:"flex",flexDirection:"column"},children:[Object(j.jsxs)("div",{className:"editor",children:[Object(j.jsxs)("div",{className:"header",children:[Object(j.jsx)("div",{children:"Variables"}),Object(j.jsx)("div",{className:"spacer"}),Object(j.jsx)("button",{style:{visibility:"hidden"},children:"i"})]}),Object(j.jsx)("div",{className:"ta ta2",children:Object(j.jsx)("div",{children:Object(j.jsx)(d.a,{data:A})})})]}),Object(j.jsxs)("div",{className:"editor",children:[Object(j.jsxs)("div",{className:"header",children:[Object(j.jsx)("div",{children:"Stack"}),Object(j.jsx)("div",{className:"spacer"}),Object(j.jsx)("button",{style:{visibility:"hidden"},children:"i"})]}),Object(j.jsx)("div",{className:"ta ta2",children:H?Object(j.jsxs)("table",{style:{margin:"auto"},className:"table",children:[Object(j.jsxs)("tr",{children:[Object(j.jsx)("th",{children:"Function"}),Object(j.jsx)("th",{children:"Line Number"})]}),$.reverse().map((function(n){var e=n.fname,t=n.linenum;return Object(j.jsxs)("tr",{children:[Object(j.jsx)("td",{children:""===e?Object(j.jsx)("italic",{children:"toplevel"}):e}),Object(j.jsx)("td",{children:t})]})}))]}):Object(j.jsx)("div",{})})]}),Object(j.jsxs)("div",{className:"editor",children:[Object(j.jsxs)("div",{className:"header",children:[Object(j.jsx)("div",{children:"Output"}),Object(j.jsx)("div",{className:"spacer"}),Object(j.jsx)("button",{style:{visibility:"hidden"},children:"i"})]}),Object(j.jsx)("div",{className:"ta ta2",children:Object(j.jsx)("pre",{style:{marginLeft:"1rem"},children:K})})]})]})]})})},S=function(n){n&&n instanceof Function&&t.e(3).then(t.bind(null,90)).then((function(e){var t=e.getCLS,s=e.getFID,a=e.getFCP,i=e.getLCP,r=e.getTTFB;t(n),s(n),a(n),i(n),r(n)}))};c.a.render(Object(j.jsx)(i.a.StrictMode,{children:Object(j.jsx)(E,{})}),document.getElementById("root")),S()}},[[89,1,2]]]);
//# sourceMappingURL=main.079c375e.chunk.js.map